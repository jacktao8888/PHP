##关键字
  final：
        1、final不能修饰成员属性
        2、只能修饰类和方法，用来限制类不被继承，用来限制方法不被覆盖
        作用：
            1、使用final修饰的类不能被子类继承
            2、使用final修饰的类不能被子类重载（覆盖）
        
  static：
      静态属性：  
        1、static可以修饰成员属性和成员方法，不能修饰类
        2、用static修饰的成员属性，可以被同一个类的所有对象共享！
        3、静态数据存储在内存中的数据段中
        4、静态数据在第一次加载时分配到内存中，以后再用到类时，直接从数据段中获取
        5、什么时候类被加载：只要在程序中使用这个类（有这个类名出现）
      
      静态方法：  
              1、不用创建对象，就可以通过类名调用静态方法，类名::静态方法；
              2、静态方法（static修饰的方法），不能访问非静态成员（非静态方法可以访问静态成员）
              注意：静态方法不使用对象调用，也就没有对象，$this就不能代表什么对象，非静态成员还必须使用对象
                    如果确定一个方法不使用非静态成员，才可以将这个方法声明为静态方法
      
      注意：
            1、如果是在类外面，使用类名去访问，不用对象去访问，因为同一个类的所有对象访问的静态变量是相同的
               类名::静态成员
            2、如果是在类里面使用静态成员，可以使用self代表本类（$this代表本对象）
               self::静态成员
        
  const:
        1、只能修饰成员属性
        2、在类中声明成员属性，用const
        3、访问方式和static静态成员一样（在类内部使用 self::常量，在类外部使用 类名::常量）
        4、常量一定要在声明时就赋值，只能赋标量（整型、浮点型、布尔型、字符串）
        
##魔术方法
  __call():
          作用：调用对象中不存在的方法时，就会出现系统报错，然后程序退出
          什么时候自动调用：在调用一个对象中不存在的方法时自动调用，需要两个参数
                function __call($methodName,$args){
                
                }
  
  __toString():
          作用：快速读取对象的成员的字符串表示方法
          调用：直接输出对象引用时自动调用，
                比如:$p1=new Person;
                     echo $p1;      //输出function __toString(){}中定义字符串的内容

  __clone():
          1、使用clone克隆一个对象
             $p1=clone $p;
             $p   原本（原来的对象）
             $p1  副本（复制出来的对象）
          2、__clone()就是在克隆对象时自动调用的方法
          3、只要一个对象一诞生，就要有初始化的动作，和构造方法__construct()作用类似
          4、__clone()方法中的$this关键字，代表的是副本对象

  __autoload():
          注意：
              1、其他的魔术方法都是在类中添加起作用，这是唯一一个不在类中添加的方法。
              2、只要在页面中使用一个类，只要用到类名就会自动将类名传给这个函数
            如：
              function __autoload($className){
                include "./".$className.".class.php";   //include动态包含类
              }
              
              $one=new One;   //会自动载入One类
              Two::func();    //会自动载入Two类
  
  对象串行化（序列化）：将一个对象转化成二进制串：
          1、将对象长时间存储在数据库或文件中时
          2、将对象在多个PHP文件中传输时
          
          serialize()     参数是一个对象，返回的就是串行化的二进制串
          unserialize()   参数是对象的二进制串，返回来的是新生成的对象
          
          如：
            $p=new Person("zhangsan",20,"nan");
            $str=serialize($p);
            file_put_contents("test.txt",$str);
  
  __sleep():是在序列化时自动调用的方法
       作用：可以将一个对象部分序列化，只要这个方法中返回一个数组，数组中有几个变量就序列化几个成员属性，如果类中不加这个方法，
             则所有成员属性都被序列化
          
  __wakeup():是在反序列化时自动调用的方法
        对象重新诞生的一个过程：__construct() __clone() __wakeup()











