##直接声明：
索引数组：下标以整数作为索引的数组
          $arr[]="1";       //下标默认为0
          $arr[0]="one";    //$arr[0]由原来的"1"变为"one"
          $arr[3]="jack";
          $arr[]="20";
          $arr[9]="man";
          $arr[]="aaa@bbb.com";   //下标为10
关联数组：下标以字符串作为索引的数组
          $arr["id"]="1";
          $arr["name"]="Linda";
          $arr["age"]="age";

##使用array函数
          $usr=array(1,"Tom","male");
          $usr=array(0=>1,"name"=>"Jerry",50=>"man");       //键=>值对，键可以为整数或字符串，值可以为任意
          
          $usr=array(
                    array(1,"zhangsan",20),
                    array(2,"lisi",25),
                    array(3,"wangwu",30)
          );
          
          
数组遍历方式：
##for循环遍历：只适合遍历连续的索引数组（也就是不能遍历关联数组，或下表不连续的索引数组）
               这不是PHP中的首选方式
##foreach()循环遍历：
          foreach(数组变量 as 变量值){
          
          }
          
      例：$user=array("id"=>1,"name"=>"Peter","age"=>29);
          foreach($user as $val){
                    echo $val.'<br>';
          }
          foreach($user as $key=>$val){
                    echo $key.'===>'.$val.'<br>';
          }
##each()、list()和while()组合循环遍历数组
###each()和while()
       例：
          $user=array("id"=>1,"name"=>"Peter","age"=>29);
          $a=each($user);               //每次只取一组键值对
          print_r($a);
          $b=each($user);
          print_r($b);
           
          while($arr=each($user)){
                    //echo $arr[0].'===>'.$arr[1].'<br>';
                    echo $arr['key'].'===>'.$arr['value'.'<br>'];
          }
###list()函数和each()、while():
       list只能接收索引数组，
       例：
          $user=array(1,"Tom",19);
          list($id,$name,$age)=$user;   //$id=1,$name="Tom",$age=19
       例：
          $user=array("id"=>1,"name"=>"Peter","age"=>29);
          list($key,$val)=each($user);  //$key:[0]->"id"  $val:[1]->1
          
          while(list($key,$val)=each($user)){
          
          }
       使用数组的内部指针访问数组
          prev(数组);         //指针指向上一个键值对
          next(数组);         //指针指向下一个键值对
          reset(数组);        //指针指向数组开头的键值对
          end(数组);          //指针指向数组最后的键值对
          
          current(数组);      //取数组当前指针下的值
          key(数组);          //取数组当前指针下的键

##超全局数组——自动全局变量
  包含了来自web服务器、客户端、运行环境、用户输入的数据
  在函数中可以直接使用这些数组
  
  $_GET             //经由URL请求提交至脚本的变量，GET请求方式
  $_POST            //经由POST方法提交值脚本的变量
  $_REQUEST         //经由GET/POST/COOKIE机制提交到脚本的变量，该数组不可靠，尽量不要使用
  $_FILES           //经由HTTP POST文件上传而提交至脚本的变量
  $_COOKIE          //会话控制，跟踪用户变量
  $_SESSION         //会话控制
  $_ENV             //系统环境提交至脚本的变量
  $_SERVER          //WEB服务器设定的，或直接和当前的脚本执行环境相关联的变量
  $GLOBALS          //只要是当前脚本有效的变量都在这里，数组键名为全局变量的名称
  








