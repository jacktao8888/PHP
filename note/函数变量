1、PHP分不出变量是声明还是使用，所以全局变量要用global声明之后可以在函数中使用全局变量
2、静态变量只能声明在函数（类）中，不能再全局中声明，使用static在变量前面，如static $a;
   一个变量可以在同一个函数多次调用中同用；
   静态变量在静态代码段中保存；
   在一个函数多次调用时，只在第一次调用时声明到内存中，以后再调用，就不再声明，而直接使用
3、超全局数组——自动全局变量
  包含了来自web服务器、客户端、运行环境、用户输入的数据
  在函数中可以直接使用这些数组
  
  $_GET             //经由URL请求提交至脚本的变量，GET请求方式
  $_POST            //经由POST方法提交值脚本的变量
  $_REQUEST         //经由GET/POST/COOKIE机制提交到脚本的变量，该数组不可靠，尽量不要使用
  $_FILES           //经由HTTP POST文件上传而提交至脚本的变量
  $_COOKIE          //会话控制，跟踪用户变量
  $_SESSION         //会话控制
  $_ENV             //系统环境提交至脚本的变量
  $_SERVER          //WEB服务器设定的，或直接和当前的脚本执行环境相关联的变量
  $GLOBALS          //只要是当前脚本有效的变量都在这里，数组键名为全局变量的名称


1、变量函数：将函数名赋给变量，通过变量调用函数。
   如：function one($a,$b){}
       function two($x,$y){}
       $a=one;
       a($a,$b);
       $a=two;
       a($a,$b);
2、先使用系统函数，再使用自定义的函数！
3、带&参数的函数，表示引用赋值，这个参数不能传值，只能传递变量（地址）；
4、默认参数函数，如果传入实参，就用实参，如果没有，就用默认值，带有[]函数，表示这个参数可选的，
   必须传值的参数必须放在左边，因为函数传参是从左到右的；
5、带有...的参数函数，表示可以传任意多个参数，即实参可以比形参多。
6、回调函数：调用这个函数时，需要传进一个函数进来，和Python中的map、reduce、filter函数类似
7、重用函数：使用自定义的函数库
   require();     //静态包含，固定包含某个文件
   require "";
   require_once   //包含多次，只执行一次，每次都得判断是否包含过，所以执行效率较低
   include_once   //包含多次，只执行一次，每次都得判断是否包含过，所以执行效率较低
   include("文件名")；  //动态包含
   include "文件名"；
   
   静态包含：require "header.inc.php";
               /**/
             require "footer.inc.php";
   动态包含：include "model/".$className.".php";




